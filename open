#!env python
#
#  A script to emulate the MacOS command line "open".
#
import os
import sys
from subprocess import Popen

epub   = 'c:/Program Files (x86)/Adobe/Adobe Digital Editions 4.5/DigitalEditions.exe'
pdf    = 'AcroRD32.exe'
draw   = 'j:/InkscapePortable/InkscapePortable.exe'
image  = 'c:/Program Files/GIMP 2/bin/gimp-2.10.exe'
text   = 'runemacs.exe'

libre  = 'c:/Program Files/LibreOffice/program/'
calc   = os.path.join(libre, 'scalc.exe')
word   = os.path.join(libre, 'soffice.exe')

desktop = 'c:/Program Files (x86)/ArcGIS/Desktop10.7/bin'
arcgis = os.path.join(desktop, 'ArcMap.exe')
arccat = os.path.join(desktop, 'ArcCatalog.exe')

# Something more sophisticated than checking the extension would be nice
# but this is a good start.

lut = { 
    'doc'  : word,
    'docx' : word,
    'odf'  : word,
    'ods'  : calc,
    'xls'  : calc,
    'xlsx' : calc,

    'svg'  : draw,
   
    'epub' : epub,
    'pdf'  : pdf,
    'jpg'  : image,

    'txt'  : text,
    'md'   : text,
    
    'mxd'  : arcgis,
    'lyr'  : arccat,
    #    'shp' : arccat, # this does not work
    
    'gdb'  : arccat,
    'sde'  : arccat,
}

def usage():
    print("I need the name of a file to open.")

def fileopen(file):
    filename, fileext = os.path.splitext(file)
    try:
        app = lut[fileext[1:].lower()]
        print(app, file)
    except:
        print("I don't know how to open %s" % file)
        exit(-1)

    try:
        #print("Opening %s, %s" % (app, file))
        Popen([app, file])
    except Exception as e:
        print("Failed to open %s, %s" % (app,e))

    return

try:
    for file in sys.argv[1:]:
    	fileopen(os.path.abspath(file))
except IndexError:
    usage()
    exit(-1)

exit(0)
